"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("Components_HomeClient_tsx",{

/***/ "./Components/Utils/webauthn.ts":
/*!**************************************!*\
  !*** ./Components/Utils/webauthn.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractUncompressedP256: function() { return /* binding */ extractUncompressedP256; }\n/* harmony export */ });\n/* harmony import */ var cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cbor */ \"./node_modules/cbor/lib/cbor.js\");\n/* harmony import */ var cbor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cbor__WEBPACK_IMPORTED_MODULE_0__);\n// File: utils/webauthn.ts\n\n/**\r\n * Decode a PublicKeyCredential to the raw 65-byte uncompressed P-256 point.\r\n */ function extractUncompressedP256(credential) {\n    const attestationBuffer = new Uint8Array(credential.response.attestationObject);\n    const attestationStruct = cbor__WEBPACK_IMPORTED_MODULE_0__.decodeFirstSync(attestationBuffer);\n    const authData = new Uint8Array(attestationStruct.authData);\n    const rpIdHashLen = 32;\n    const flagsLen = 1;\n    const signCountLen = 4;\n    const aaguidLen = 16;\n    const headerLen = rpIdHashLen + flagsLen + signCountLen + aaguidLen;\n    const credIdLenOffset = headerLen;\n    const credIdLen = authData[credIdLenOffset] << 8 | authData[credIdLenOffset + 1];\n    const coseStart = credIdLenOffset + 2 + credIdLen;\n    const cosePubKey = authData.slice(coseStart);\n    const coseStruct = cbor__WEBPACK_IMPORTED_MODULE_0__.decodeFirstSync(cosePubKey);\n    const x = coseStruct.get(-2); // 32 bytes\n    const y = coseStruct.get(-3); // 32 bytes\n    const uncompressed = new Uint8Array(65);\n    uncompressed[0] = 0x04;\n    uncompressed.set(x, 1);\n    uncompressed.set(y, 33);\n    return uncompressed;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL1V0aWxzL3dlYmF1dGhuLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDBCQUEwQjtBQUNHO0FBRTdCOztDQUVDLEdBQ00sU0FBU0Msd0JBQ2RDLFVBQStCO0lBRS9CLE1BQU1DLG9CQUFvQixJQUFJQyxXQUM1QixXQUFZQyxRQUFRLENBQVNDLGlCQUFpQjtJQUVoRCxNQUFNQyxvQkFBeUJQLGlEQUFvQixDQUFDRztJQUNwRCxNQUFNTSxXQUFXLElBQUlMLFdBQVdHLGtCQUFrQkUsUUFBUTtJQUMxRCxNQUFNQyxjQUFjO0lBQ3BCLE1BQU1DLFdBQVc7SUFDakIsTUFBTUMsZUFBZTtJQUNyQixNQUFNQyxZQUFZO0lBQ2xCLE1BQU1DLFlBQVlKLGNBQWNDLFdBQVdDLGVBQWVDO0lBQzFELE1BQU1FLGtCQUFrQkQ7SUFDeEIsTUFBTUUsWUFBWSxRQUFTLENBQUNELGdCQUFnQixJQUFJLElBQUtOLFFBQVEsQ0FBQ00sa0JBQWtCLEVBQUU7SUFDbEYsTUFBTUUsWUFBWUYsa0JBQWtCLElBQUlDO0lBQ3hDLE1BQU1FLGFBQWFULFNBQVNVLEtBQUssQ0FBQ0Y7SUFDbEMsTUFBTUcsYUFBa0NwQixpREFBb0IsQ0FBQ2tCO0lBQzdELE1BQU1HLElBQUlELFdBQVdFLEdBQUcsQ0FBQyxDQUFDLElBQUssV0FBVztJQUMxQyxNQUFNQyxJQUFJSCxXQUFXRSxHQUFHLENBQUMsQ0FBQyxJQUFLLFdBQVc7SUFDMUMsTUFBTUUsZUFBZSxJQUFJcEIsV0FBVztJQUNwQ29CLFlBQVksQ0FBQyxFQUFFLEdBQUc7SUFDbEJBLGFBQWFDLEdBQUcsQ0FBQ0osR0FBRztJQUNwQkcsYUFBYUMsR0FBRyxDQUFDRixHQUFHO0lBQ3BCLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vQ29tcG9uZW50cy9VdGlscy93ZWJhdXRobi50cz82OGU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHV0aWxzL3dlYmF1dGhuLnRzXHJcbmltcG9ydCAqIGFzIGNib3IgZnJvbSAnY2Jvcic7XHJcblxyXG4vKipcclxuICogRGVjb2RlIGEgUHVibGljS2V5Q3JlZGVudGlhbCB0byB0aGUgcmF3IDY1LWJ5dGUgdW5jb21wcmVzc2VkIFAtMjU2IHBvaW50LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RVbmNvbXByZXNzZWRQMjU2KFxyXG4gIGNyZWRlbnRpYWw6IFB1YmxpY0tleUNyZWRlbnRpYWxcclxuKTogVWludDhBcnJheSB7XHJcbiAgY29uc3QgYXR0ZXN0YXRpb25CdWZmZXIgPSBuZXcgVWludDhBcnJheShcclxuICAgIChjcmVkZW50aWFsLnJlc3BvbnNlIGFzIGFueSkuYXR0ZXN0YXRpb25PYmplY3RcclxuICApO1xyXG4gIGNvbnN0IGF0dGVzdGF0aW9uU3RydWN0OiBhbnkgPSBjYm9yLmRlY29kZUZpcnN0U3luYyhhdHRlc3RhdGlvbkJ1ZmZlcik7XHJcbiAgY29uc3QgYXV0aERhdGEgPSBuZXcgVWludDhBcnJheShhdHRlc3RhdGlvblN0cnVjdC5hdXRoRGF0YSk7XHJcbiAgY29uc3QgcnBJZEhhc2hMZW4gPSAzMjtcclxuICBjb25zdCBmbGFnc0xlbiA9IDE7XHJcbiAgY29uc3Qgc2lnbkNvdW50TGVuID0gNDtcclxuICBjb25zdCBhYWd1aWRMZW4gPSAxNjtcclxuICBjb25zdCBoZWFkZXJMZW4gPSBycElkSGFzaExlbiArIGZsYWdzTGVuICsgc2lnbkNvdW50TGVuICsgYWFndWlkTGVuO1xyXG4gIGNvbnN0IGNyZWRJZExlbk9mZnNldCA9IGhlYWRlckxlbjtcclxuICBjb25zdCBjcmVkSWRMZW4gPSAoYXV0aERhdGFbY3JlZElkTGVuT2Zmc2V0XSA8PCA4KSB8IGF1dGhEYXRhW2NyZWRJZExlbk9mZnNldCArIDFdO1xyXG4gIGNvbnN0IGNvc2VTdGFydCA9IGNyZWRJZExlbk9mZnNldCArIDIgKyBjcmVkSWRMZW47XHJcbiAgY29uc3QgY29zZVB1YktleSA9IGF1dGhEYXRhLnNsaWNlKGNvc2VTdGFydCk7XHJcbiAgY29uc3QgY29zZVN0cnVjdDogTWFwPG51bWJlciwgQnVmZmVyPiA9IGNib3IuZGVjb2RlRmlyc3RTeW5jKGNvc2VQdWJLZXkpO1xyXG4gIGNvbnN0IHggPSBjb3NlU3RydWN0LmdldCgtMikhOyAvLyAzMiBieXRlc1xyXG4gIGNvbnN0IHkgPSBjb3NlU3RydWN0LmdldCgtMykhOyAvLyAzMiBieXRlc1xyXG4gIGNvbnN0IHVuY29tcHJlc3NlZCA9IG5ldyBVaW50OEFycmF5KDY1KTtcclxuICB1bmNvbXByZXNzZWRbMF0gPSAweDA0O1xyXG4gIHVuY29tcHJlc3NlZC5zZXQoeCwgMSk7XHJcbiAgdW5jb21wcmVzc2VkLnNldCh5LCAzMyk7XHJcbiAgcmV0dXJuIHVuY29tcHJlc3NlZDtcclxufSJdLCJuYW1lcyI6WyJjYm9yIiwiZXh0cmFjdFVuY29tcHJlc3NlZFAyNTYiLCJjcmVkZW50aWFsIiwiYXR0ZXN0YXRpb25CdWZmZXIiLCJVaW50OEFycmF5IiwicmVzcG9uc2UiLCJhdHRlc3RhdGlvbk9iamVjdCIsImF0dGVzdGF0aW9uU3RydWN0IiwiZGVjb2RlRmlyc3RTeW5jIiwiYXV0aERhdGEiLCJycElkSGFzaExlbiIsImZsYWdzTGVuIiwic2lnbkNvdW50TGVuIiwiYWFndWlkTGVuIiwiaGVhZGVyTGVuIiwiY3JlZElkTGVuT2Zmc2V0IiwiY3JlZElkTGVuIiwiY29zZVN0YXJ0IiwiY29zZVB1YktleSIsInNsaWNlIiwiY29zZVN0cnVjdCIsIngiLCJnZXQiLCJ5IiwidW5jb21wcmVzc2VkIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./Components/Utils/webauthn.ts\n"));

/***/ })

});